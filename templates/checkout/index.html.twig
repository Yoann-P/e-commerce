{% extends 'base.html.twig' %} {% block title %}E-commerce Checkout!{% endblock
%} {% block body %} {% include "page_head/page_head.html.twig" with
{'page_name': 'Checkout'} %}
<!-- {%block stylesheets%}
<script src="https://js.stripe.com/v3/"></script>
{%endblock%} -->
<div class="main_content"
data-cart="{{cart_json}}"
data-public_key = "{{public_key}}">
  <div class="section">
    <div class="container">
      <div class="row">
        <div class="col-lg-6">
          <div class="toggle_info">
            <span
              ><i class="fas fa-user"></i>Returning customer?
              <a
                href="#loginform"
                data-bs-toggle="collapse"
                aria-expanded="false"
                class="collapsed"
                >Click here to login</a
              ></span
            >
          </div>
          <div id="loginform" class="panel-collapse collapse login_form">
            <div class="panel-body">
              <p>
                If you have shopped with us before, please enter your details
                below. If you are a new customer, please proceed to the Billing
                &amp; Shipping section.
              </p>
              <form
                novalidate=""
                method="post"
                class="ng-untouched ng-pristine ng-valid"
              >
                <div class="form-group mb-3">
                  <input
                    type="text"
                    required=""
                    name="email"
                    placeholder="Username Or Email"
                    class="form-control"
                  />
                </div>
                <div class="form-group mb-3">
                  <input
                    required=""
                    type="password"
                    name="password"
                    placeholder="Password"
                    class="form-control"
                  />
                </div>
                <div class="login_footer form-group mb-3">
                  <div class="chek-form">
                    <div class="custome-checkbox">
                      <input
                        type="checkbox"
                        name="checkbox"
                        id="remember"
                        value=""
                        class="form-check-input"
                      /><label for="remember" class="form-check-label"
                        ><span>Remember me</span></label
                      >
                    </div>
                  </div>
                </div>
                <div class="form-group mb-3">
                  <button
                    type="submit"
                    name="login"
                    class="btn btn-fill-out btn-block"
                  >
                    Log in
                  </button>
                </div>
              </form>
            </div>
          </div>
        </div>
        <div class="col-lg-6">
          <div class="toggle_info">
            <span
              ><i class="fas fa-tag"></i>Have a coupon?
              <a
                href="#coupon"
                data-bs-toggle="collapse"
                aria-expanded="false"
                class="collapsed"
                >Click here to enter your code</a
              ></span
            >
          </div>
          <div id="coupon" class="panel-collapse collapse coupon_form">
            <div class="panel-body">
              <p>If you have a coupon code, please apply it below.</p>
              <div class="coupon field_form input-group">
                <input
                  type="text"
                  value=""
                  placeholder="Enter Coupon Code.."
                  class="form-control"
                />
                <div class="input-group-append">
                  <button type="submit" class="btn btn-fill-out btn-sm">
                    Apply Coupon
                  </button>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
      <div class="row">
        <div class="col-12">
          <div class="medium_divider"></div>
          <div class="divider center_icon">
            <i class="linearicons-credit-card"></i>
          </div>
          <div class="medium_divider"></div>
        </div>
      </div>
      <div class="row">
        <div class="col-md-6">
            <div class="heading_s1">
                <h4>Billing Address</h4>
                <select name="billing_address"class="form-control">
                  <option value="">--- Choose billing address --- </option>
                  {%for address in addresses%}
                  <option>
                    {{address.clientName}}
                    ({{address.street}}
                    {{address.codePostal}}
                    {{address.city}}
                    {{address.state}})
                  </option>                  
                  {%endfor%}
                </select>
            </div>
            <div class="heading_s1">
                <h4>Shipping Address</h4>
                <select name="shipping_address"class="form-control">
                  <option value="">--- Choose shipping address --- </option>
                  {%for address in addresses%}
                  <option>
                    {{address.clientName}}
                    ({{address.street}}
                    {{address.codePostal}}
                    {{address.city}}
                    {{address.state}})
                  </option>                  
                  {%endfor%}
                </select>
            </div>
            <div class="heading_s1">
              <h4>Comments </h4>
              <textarea class="form-control" name="Comments" id="" cols="30" rows="8"></textarea>
          </div>
         
        </div>
        <div class="col-md-6">
          <div class="order_review">
            <div class="heading_s1">
              <h4>Your Orders</h4>
            </div>
            <div class="table-responsive order_table">
              <table class="table">
                <thead>
                  <tr>
                    <th>Product</th>
                    <th>Total</th>
                  </tr>
                </thead>
                <tbody>
                  {%for item in cart.items%}
                  <tr>
                    <td>
                      <img
                            src="../assets/images/products/{{
                              item.product.imageUrls[0]
                            }}"
                            width="40"
                            alt=""
                          />
                      {{item.product.name}} 
                      <span class="product-qty">{{item.quantity}}</span>
                      <span class="product-price">x {{(item.product.soldePrice / 100)  | format_currency ('EUR')}}</span>
                    </td>
                    <td>{{(item.product.soldePrice * item.quantity / 100)  | format_currency ('EUR')}}</td>
                  </tr>
                  {%endfor%}
                </tbody>
                <tfoot>
                  <tr>
                    <th>SubTotal</th>
                    <td class="product-subtotal">{{(cart.sub_total / 100)  | format_currency ('EUR')}}</td>
                  </tr>
                  <tr>
                    <th>Shipping</th>
                    <td>{{ (cart.carrier.price / 100)  | format_currency ('EUR')}}</td>
                  </tr>
                  <tr>
                    <th>Total</th>
                    <td class="product-subtotal">{{(cart.sub_total_with_carrier / 100)  | format_currency ('EUR')}}<//td>
                  </tr>
                </tfoot>
              </table>
            </div>
            <div class="payment_method">
              
            </div>
            <div class="payment-button d-none"><a href="#" class="btn btn-fill-out btn-block" data-bs-toggle="modal" data-bs-target="#staticBackdrop"
              >Pay now ({{(cart.sub_total_with_carrier / 100)  | format_currency ('EUR')}})</a
              >
            </div>
              
              
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<div class="modal fade" id="staticBackdrop" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered ">
    <div class="modal-content">
      <div class="modal-body">
        <form id="payment-form">
          <div id="payment-element">
            <!--Stripe.js injects the Payment Element-->
          </div>
          <button id="submit">
            <div class="spinner hidden" id="spinner"></div>
            <span id="button-text">Pay now</span>
          </button>
          <div id="payment-message" class="hidden"></div>
        </form>
      </div>
    </div>
  </div>
</div>

{% endblock %}
{% block javascripts %} 
<script>
  // const addresses = document.querySelectorAll('select')
  // console.log({addresses})
let billing_address =""
let shipping_address =""
let comment = ""
let displayPayBtn = false

const billing_address_select = document.querySelector('select[name="billing_address"]');
const shipping_address_select = document.querySelector('select[name="shipping_address"]');
const comments_textarea = document.querySelector('textarea')
const payBtn = document.querySelector('.payment-button')

const updateButton = () => {
  displayPayBtn = (!!billing_address )&& (!!shipping_address);
  // console.log({billing_address_select, shipping_address_select, comment})
  // console.log({ displayPayBtn });
  displayPayBtn ? payBtn.classList.remove("d-none") : payBtn.classList.add("d-none")
};

billing_address_select.onchange = (event) => {
  billing_address = event.target.value;
  updateButton();
};

shipping_address_select.onchange = (event) => {
  shipping_address = event.target.value;
  updateButton();
};

comments_textarea.onchange = (event) => {
    comment = event.target.value
    updateButton()
}


// STRIPE COMPONENT 
const main_content = document.querySelector(".main_content")
const cart = JSON.parse(main_content?.dataset?.cart || [])
const public_key = main_content?.dataset?.public_key || ""
// console.log({public_key, cart});

// This is your test publishable API key.
const stripe = Stripe(public_key);

// The items the customer wants to buy
const items = cart.items;

let elements;

initialize();
checkStatus();

document
  .querySelector("#payment-form")
  .addEventListener("submit", handleSubmit);

// Fetches a payment intent and captures the client secret
async function initialize() {
  const { clientSecret } = await fetch("/api/stripe/payment-intent", {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify({  }),
  }).then((r) => r.json());

  elements = stripe.elements({ clientSecret });

  const paymentElementOptions = {
    layout: "tabs",
  };

  const paymentElement = elements.create("payment", paymentElementOptions);
  paymentElement.mount("#payment-element");
}

async function handleSubmit(e) {
  e.preventDefault();
  setLoading(true);

  const { error } = await stripe.confirmPayment({
    elements,
    confirmParams: {
      // Make sure to change this to your payment completion page
      return_url: "http://localhost:4242/checkout.html",
    },
  });

  // This point will only be reached if there is an immediate error when
  // confirming the payment. Otherwise, your customer will be redirected to
  // your `return_url`. For some payment methods like iDEAL, your customer will
  // be redirected to an intermediate site first to authorize the payment, then
  // redirected to the `return_url`.
  if (error.type === "card_error" || error.type === "validation_error") {
    showMessage(error.message);
  } else {
    showMessage("An unexpected error occurred.");
  }

  setLoading(false);
}

// Fetches the payment intent status after payment submission
async function checkStatus() {
  const clientSecret = new URLSearchParams(window.location.search).get(
    "payment_intent_client_secret"
  );

  if (!clientSecret) {
    return;
  }

  const { paymentIntent } = await stripe.retrievePaymentIntent(clientSecret);

  switch (paymentIntent.status) {
    case "succeeded":
      showMessage("Payment succeeded!");
      break;
    case "processing":
      showMessage("Your payment is processing.");
      break;
    case "requires_payment_method":
      showMessage("Your payment was not successful, please try again.");
      break;
    default:
      showMessage("Something went wrong.");
      break;
  }
}

// ------- UI helpers -------

function showMessage(messageText) {
  const messageContainer = document.querySelector("#payment-message");

  messageContainer.classList.remove("hidden");
  messageContainer.textContent = messageText;

  setTimeout(function () {
    messageContainer.classList.add("hidden");
    messageContainer.textContent = "";
  }, 4000);
}

// Show a spinner on payment submission
function setLoading(isLoading) {
  if (isLoading) {
    // Disable the button and show a spinner
    document.querySelector("#submit").disabled = true;
    document.querySelector("#spinner").classList.remove("hidden");
    document.querySelector("#button-text").classList.add("hidden");
  } else {
    document.querySelector("#submit").disabled = false;
    document.querySelector("#spinner").classList.add("hidden");
    document.querySelector("#button-text").classList.remove("hidden");
  }
}
</script>
{% endblock %}

